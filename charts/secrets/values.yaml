global:
  secret:
    generated: true
aws:
  enabled: false
  data_:
    AWSAccessKeyID: ""
    AWSSecretAccessKey: ""
dexcom:
  # -- whether to create dexcom secret
  enabled: false
  data_:
    # -- plaintext Dexcom Oauth2 client id
    ClientId: ""
    # -- plaintext Dexcom Oauth2 client secret
    ClientSecret: ""
    # -- plaintext Dexcom Oauth2 state salt
    StateSalt: ""
kissmetrics:
  # secret.enabled -- Whether to use create kissmetrics secret
  enabled: false
  data_:
    # secret.data_.APIKey -- plaintext Kissmetrics API Key
    APIKey: ""
    # secret.data_.Token -- plaintext Kissmetrics Token
    Token: ""
    # secret.data_.UCSFAPIKey -- plaintext UCSF Kissmetrics Token
    UCSFAPIKey: ""
    # secret.data_.UCSFWhitelist -- plaintext UCSF metrics whitelist
    UCSFWhitelist: ""
mongo:
  # -- whether to create mongo secret
  enabled: false
  data_:
    # -- plaintext Mongo DB scheme, either `mongodb` or `mongodb+srv`
    Scheme: ""
    # -- plaintext comma-separated list of Mongo `host[:port]` addresses
    Addresses: ""
    # -- plaintext, If non-empty, Mongo username
    Username: ""
    # -- plaintext Mongo password
    Password: ""
    # -- plaintext Mongo database name
    Database: ""
    # -- plaintext, If true, use SSL on Mongo connection
    Tls: ""
    # -- plaintext additional Mongo connection params
    OptParams: ""
server:
  # -- whether to create secret
  enabled: false
  data_:
    # -- service authorization, if empty, random value is generated
    ServiceAuth: ""
tokenSigningKey:
  # -- whether to generate secret
  enabled: false
  data_:
    public: ""
    private: ""
userdata:
  # -- whether to create userdata secret
  enabled: false
  data_:
    # -- plaintext user password salt
    UserPasswordSalt: ''
    # -- plaintext user id salt
    UserIdSalt: ''
